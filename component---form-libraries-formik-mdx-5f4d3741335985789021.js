(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"3qbP":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return m}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk");var o=a("SAVP"),n=a("TjRS");a("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"form-libraries/formik.mdx"}});var l={_frontmatter:i},s=n.a;function m(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(o.b)(s,r({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"integrating-fonk-with-react-formik"},"Integrating Fonk with React Formik"),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/jaredpalmer/formik"}),"Formik")," is a great library to manage forms state."),Object(o.b)("p",null,"Adding ",Object(o.b)("strong",{parentName:"p"},"Fonk")," to ",Object(o.b)("strong",{parentName:"p"},"Formik")," allows you to seamlessly add validation capabilities to ",Object(o.b)("strong",{parentName:"p"},"Formik"),"."),Object(o.b)("p",null,"In order to use ",Object(o.b)("strong",{parentName:"p"},"Fonk")," with ",Object(o.b)("strong",{parentName:"p"},"Formik")," you will have to install ",Object(o.b)("strong",{parentName:"p"},"fonk-formik")," adaptor:"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-bash"}),"npm install @lemoncode/fonk @lemoncode/fonk-formik --save\n")),Object(o.b)("p",null,"The main change to apply when using a ",Object(o.b)("strong",{parentName:"p"},"fonk-formik")," comes when you want to instantiate\n",Object(o.b)("strong",{parentName:"p"},"Fonk")," engine with your form validation schema, instead of calling ",Object(o.b)("em",{parentName:"p"},"createFormValidation"),"\n, just replace that entry with ",Object(o.b)("em",{parentName:"p"},"createFormikValidation")),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-diff"}),"- import { createFormValidation, Validators } from '@lemoncode/fonk';\n+ import { Validators } from '@lemoncode/fonk';\n+ import { createFonkValidation } from '@lemoncode/fonk-formik';\n\nconst validationSchema = {\n  field: {\n    email: [Validators.required.validator],\n    password: [Validators.required.validator]\n  }\n};\n\n- export const formValidation = createFormValidation(validationSchema);\n+ export const formValidation = createFormikValidation(validationSchema);\n")),Object(o.b)("p",null,"Now you can hook to Formik form validation (example):"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-diff"}),'    <Formik\n      initialValues={{ email: "", password: "" }}\n+       validate={formValidation.validateForm}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n')),Object(o.b)("p",null,"And if you want to hook to Formik field validations (example):"),Object(o.b)("pre",null,Object(o.b)("code",r({parentName:"pre"},{className:"language-diff"}),'    <Field name="email"/>\n+    {errors &&\n+      errors.email &&\n+       touched.email &&\n+       <div>{errors.email}</div>}\n')),Object(o.b)("h1",{id:"examples"},"Examples:"),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/basic"}),"Basic example")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/formik-components"}),"Using formik Field")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/field-level-validations"}),"Firing validatins at field level")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/async-validator"}),"Asynchronous validation")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-error-message-global"}),"Customizing validator's error messages globaly")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-error-message-local"}),"Customizing validator's error messages just for a given form")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-validators"}),"Creating custom validators")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/nested-field"}),"Validating nested fields")),Object(o.b)("p",null,Object(o.b)("a",r({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/record-validation"}),"Defining record validations")))}m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"form-libraries/formik.mdx"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---form-libraries-formik-mdx-5f4d3741335985789021.js.map