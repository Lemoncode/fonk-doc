{"version":3,"sources":["webpack:///../form-libraries/formik.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"0eAMO,IAAMA,EAAe,Q,2MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,sCADR,sCAGA,qBAAG,mBAAGC,WAAW,KAAQ,CACrB,KAAQ,0CADT,UAAH,8CAGA,+BAAc,sBAAQA,WAAW,KAAnB,QAAd,OAA8D,sBAAQA,WAAW,KAAnB,UAA9D,4DAAqK,sBAAQA,WAAW,KAAnB,UAArK,KACA,wCAAuB,sBAAQA,WAAW,KAAnB,QAAvB,SAAyE,sBAAQA,WAAW,KAAnB,UAAzE,6BAAiJ,sBAAQA,WAAW,KAAnB,eAAjJ,aACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,gEAIL,8DAA6C,sBAAQA,WAAW,KAAnB,eAA7C,wCACF,sBAAQA,WAAW,KAAnB,QADE,gEACuG,kBAAIA,WAAW,KAAf,wBADvG,oCAE6B,kBAAIA,WAAW,KAAf,2BAC7B,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,oeAgBL,8EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0TAaL,uFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,uIAQL,iBAAQ,CACN,GAAM,YADR,aAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,wFADT,kBAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,oGADT,uBAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,0GADT,qCAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,kGADT,4BAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,8GADT,mDAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,6GADT,iEAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,oGADT,+BAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,+FADT,6BAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,oGADT,iC,kMAOPJ,EAAWK,gBAAiB","file":"component---form-libraries-formik-mdx-67559afa4412b94f45a5.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/test-ci-code/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"integrating-fonk-with-react-formik\"\n    }}>{`Integrating Fonk with React Formik`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/jaredpalmer/formik\"\n      }}>{`Formik`}</a>{` is a great library to manage forms state.`}</p>\n    <p>{`Adding `}<strong parentName=\"p\">{`Fonk`}</strong>{` to `}<strong parentName=\"p\">{`Formik`}</strong>{` allows you to seamlessly add validation capabilities to `}<strong parentName=\"p\">{`Formik`}</strong>{`.`}</p>\n    <p>{`In order to use `}<strong parentName=\"p\">{`Fonk`}</strong>{` with `}<strong parentName=\"p\">{`Formik`}</strong>{` you will have to install `}<strong parentName=\"p\">{`fonk-formik`}</strong>{` adaptor:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @lemoncode/fonk @lemoncode/fonk-formik --save\n`}</code></pre>\n    <p>{`The main change to apply when using a `}<strong parentName=\"p\">{`fonk-formik`}</strong>{` comes when you want to instantiate\n`}<strong parentName=\"p\">{`Fonk`}</strong>{` engine with your form validation schema, instead of calling `}<em parentName=\"p\">{`createFormValidation`}</em>{`\n, just replace that entry with `}<em parentName=\"p\">{`createFormikValidation`}</em></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`- import { createFormValidation, Validators } from '@lemoncode/fonk';\n+ import { Validators } from '@lemoncode/fonk';\n+ import { createFonkValidation } from '@lemoncode/fonk-formik';\n\nconst validationSchema = {\n  field: {\n    email: [Validators.required.validator],\n    password: [Validators.required.validator]\n  }\n};\n\n- export const formValidation = createFormValidation(validationSchema);\n+ export const formValidation = createFormikValidation(validationSchema);\n`}</code></pre>\n    <p>{`Now you can hook to Formik form validation (example):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`    <Formik\n      initialValues={{ email: \"\", password: \"\" }}\n+       validate={formValidation.validateForm}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n`}</code></pre>\n    <p>{`And if you want to hook to Formik field validations (example):`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`    <Field name=\"email\"/>\n+    {errors &&\n+      errors.email &&\n+       touched.email &&\n+       <div>{errors.email}</div>}\n`}</code></pre>\n    <h1 {...{\n      \"id\": \"examples\"\n    }}>{`Examples:`}</h1>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/basic\"\n      }}>{`Basic example`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/formik-components\"\n      }}>{`Using formik Field`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/field-level-validations\"\n      }}>{`Firing validatins at field level`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/async-validator\"\n      }}>{`Asynchronous validation`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-error-message-global\"\n      }}>{`Customizing validator's error messages globaly`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-error-message-local\"\n      }}>{`Customizing validator's error messages just for a given form`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-validators\"\n      }}>{`Creating custom validators`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/nested-field\"\n      }}>{`Validating nested fields`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/record-validation\"\n      }}>{`Defining record validations`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}