{"version":3,"sources":["webpack:///../gifs/validate-field-record-and-form.gif","webpack:///../general/validating-form.mdx"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","isMDXComponent"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,8E,+aCMpC,IAAMC,EAAe,Q,6MAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,qPAEiB,kBAAIC,WAAW,KAAf,UAFjB,gDAGA,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,sCACP,sBAAQA,WAAW,KAAnB,SAFL,IAEsD,mBAAGA,WAAW,KAAQ,CACxE,KAAQ,iCACP,sBAAQA,WAAW,KAAnB,mBAJL,iDAI6G,mBAAGA,WAAW,KAAQ,CAC/H,KAAQ,+BACP,sBAAQA,WAAW,KAAnB,kBACL,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,+DAIL,4DACA,sBACE,kBAAIA,WAAW,MAAf,yBAEF,uCACA,sBACE,kBAAIA,WAAW,MAAf,iDACA,kBAAIA,WAAW,MAAf,4DAAiF,mBAAGA,WAAW,MAAS,CACpG,KAAQ,mCADqE,oBAAjF,YAGA,kBAAIA,WAAW,MAAf,sEAA2F,mBAAGA,WAAW,MAAS,CAC9G,KAAQ,mCAD+E,oBAA3F,aAIF,8BACE,iBAAGA,WAAW,cAAd,uDAAmF,mBAAGA,WAAW,KAAQ,CACrG,KAAQ,+BADuE,YAAnF,MAIF,iDACA,0DACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,uGASL,gFACA,sBACE,kBAAIA,WAAW,MAAf,UAA+B,kBAAIA,WAAW,MAAf,WAA/B,KAAyE,kBAAIA,WAAW,MAAf,SAAzE,KAAiH,kBAAIA,WAAW,MAAf,YAAjH,yBACA,kBAAIA,WAAW,MAAf,UAA+B,kBAAIA,WAAW,MAAf,gBAA/B,OAAgF,kBAAIA,WAAW,MAAf,WAAhF,mBACE,kBAAIA,WAAW,MAAf,oBADF,6BAGF,+EACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,kUAcL,2GACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mXAiBL,yEACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,0tBAmCL,qFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,wKAaL,gDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,mfA8BL,qBAAG,mBAAKC,IAAI,iCAAiCC,IAAKC,EAAQ,WAC1D,kCACA,sBACE,kBAAIH,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kHADQ,oBAApB,KAGA,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,kHADQ,oBAApB,MAIF,mDACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2HADQ,+BAApB,KAGA,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,2HADQ,+BAApB,MAIF,oKACgE,mBAAGA,WAAW,KAAQ,CAClF,KAAQ,4CADoD,cADhE,M,oMAQJJ,EAAWQ,gBAAiB","file":"component---general-validating-form-mdx-10343acece254e757f6f.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/validate-field-record-and-form-68deb0516130b231e7f7c8817ef17798.gif\";","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/test-ci-code/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"form-validation\"\n    }}>{`Form Validation`}</h1>\n    <p>{`We have learned so far how to fire single field validations and record validations, but under some\nscenarios we need to execute all associated fields validations plus record validations, for instance\nbefore hitting the `}<em parentName=\"p\">{`submit`}</em>{` button you want to ensure everything is ok.`}</p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Lemoncode/fonk\"\n      }}><strong parentName=\"a\">{`Fonk`}</strong></a>{` `}<a parentName=\"p\" {...{\n        \"href\": \"/fonk-doc/api#formvalidation\"\n      }}><strong parentName=\"a\">{`FormValidation`}</strong></a>{` includes a method just for that, it's called `}<a parentName=\"p\" {...{\n        \"href\": \"/fonk-doc/api#validateform\"\n      }}><strong parentName=\"a\">{`validateForm`}</strong></a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`validateForm(values: any): Promise<FormValidationResult>\n`}</code></pre>\n    <p>{`In this method we pass as arguments`}</p>\n    <ul>\n      <li parentName=\"ul\">{`All the form values.`}</li>\n    </ul>\n    <p>{`And it returns`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Whether all the validations succeeded or not.`}</li>\n      <li parentName=\"ul\">{`An object containing a key per field, each key maps to a `}<a parentName=\"li\" {...{\n          \"href\": \"/fonk-doc/api#validationresult\"\n        }}>{`ValidationResult`}</a>{` object.`}</li>\n      <li parentName=\"ul\">{`An object contains a key per record validation, each key maps to a `}<a parentName=\"li\" {...{\n          \"href\": \"/fonk-doc/api#validationresult\"\n        }}>{`ValidationResult`}</a>{` object.`}</li>\n    </ul>\n    <blockquote>\n      <p parentName=\"blockquote\">{`You can check the validateForm formal specs in this `}<a parentName=\"p\" {...{\n          \"href\": \"/fonk-doc/api#validateform\"\n        }}>{`api link`}</a>{`.`}</p>\n    </blockquote>\n    <p>{`Let's get our hands wet:`}</p>\n    <p>{`We have the following form model:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const checkoutForm = {\n  product: '',\n  discount: null,\n  price: null,\n  isPrime: false,\n};\n`}</code></pre>\n    <p>{`We want to apply the following validations to the form:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Fields `}<em parentName=\"li\">{`product`}</em>{`, `}<em parentName=\"li\">{`price`}</em>{`, `}<em parentName=\"li\">{`discount`}</em>{`, are required fields`}</li>\n      <li parentName=\"ul\">{`We get `}<em parentName=\"li\">{`Freeshipping`}</em>{` if `}<em parentName=\"li\">{`isPrime`}</em>{` is true\nor if `}<em parentName=\"li\">{`price - discount`}</em>{` is greater than 20 USD.`}</li>\n    </ul>\n    <p>{`Let's define first the freeshipping record validation:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`const freeShippingRecordValidator = ({ values }) => {\n  const succeeded = values.isPrime || values.price - values.discount > 20;\n\n  return {\n    succeeded,\n    message: succeeded\n      ? ''\n      : 'Subscribe to prime service or total must be greater than 20USD',\n    type: 'RECORD_FREE_SHIPPING',\n  };\n};\n`}</code></pre>\n    <p>{`Let's define the form schema validation and instantiate our FormValidation object:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import { createFormValidation, Validators } from '@lemoncode/fonk';\n\nconst validationSchema = {\n  field: {\n    product: [Validators.required],\n    discount: [Validators.required],\n    price: [Validators.required],\n  },\n  record: {\n    freeShipping: [freeShippingRecordValidator],\n  },\n};\n\nconst formValidation = createFormValidation(validationSchema);\n`}</code></pre>\n    <p>{`If we execute the formValidation it will return:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`formValidation.validateForm(checkoutForm).then(formValidationResult => {\n  console.log(formValidationResult);\n});\n\n// Result\n{\n  \"succeeded\": false,\n  \"fieldErrors\": {\n    \"product\": {\n      \"succeeded\": false,\n      \"message\": \"Please fill in this mandatory field.\",\n      \"type\": \"REQUIRED\"\n    },\n    \"discount\": {\n      \"succeeded\": true,\n      \"message\": \"\",\n      \"type\": \"REQUIRED\"\n    },\n    \"price\": {\n      \"succeeded\": true,\n      \"message\": \"\",\n      \"type\": \"REQUIRED\"\n    }\n  },\n  \"recordErrors\": {\n    \"freeShipping\": {\n      \"succeeded\": false,\n      \"message\": \"Subscribe to prime service or total must be greater than 20USD\",\n      \"type\": \"RECORD_FREE_SHIPPING\"\n    }\n  }\n}\n`}</code></pre>\n    <p>{`If we update the values of the form to the following entries`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-diff\"\n      }}>{`const checkoutForm = {\n- product: '',\n+ product: 'a',\n- discount: null,\n+ discount: 5,\n- price: null,\n+ price: 20,\n- isPrime: false,\n+ isPrime: true,\n};\n`}</code></pre>\n    <p>{`It will return succeed:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`{\n  \"succeeded\": true,\n  \"fieldErrors\": {\n    \"product\": {\n      \"succeeded\": true,\n      \"message\": \"\",\n      \"type\": \"REQUIRED\"\n    },\n    \"discount\": {\n      \"succeeded\": true,\n      \"message\": \"\",\n      \"type\": \"REQUIRED\"\n    },\n    \"price\": {\n      \"succeeded\": true,\n      \"message\": \"\",\n      \"type\": \"REQUIRED\"\n    }\n  },\n  \"recordErrors\": {\n    \"freeShipping\": {\n      \"succeeded\": true,\n      \"message\": \"\",\n      \"type\": \"RECORD_FREE_SHIPPING\"\n    }\n  }\n}\n`}</code></pre>\n    <p><img alt=\"validate-field-record-and-form\" src={require(\"../gifs/validate-field-record-and-form.gif\")} /></p>\n    <p>{`Examples:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/js/validate-field-record-and-form\"\n        }}>{`Plain Vanilla JS`}</a>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/ts/validate-field-record-and-form\"\n        }}>{`Plain Vanilla TS`}</a>{`.`}</li>\n    </ul>\n    <p>{`React final form examples:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/react-final-form/js/validate-field-record-and-form\"\n        }}>{`React + React Final Form JS`}</a>{`.`}</li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/react-final-form/ts/validate-field-record-and-form\"\n        }}>{`React + React Final Form TS`}</a>{`.`}</li>\n    </ul>\n    <p>{`You have mastered the basics about how to define a validation schema and\nfire validations, it's time to jump into a very interesting topic `}<a parentName=\"p\" {...{\n        \"href\": \"/fonk-doc/validators/builtin-validators\"\n      }}>{`Validators`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}