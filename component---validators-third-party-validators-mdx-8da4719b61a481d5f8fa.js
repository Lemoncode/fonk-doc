(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{XuZ9:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return i})),a.d(t,"default",(function(){return p}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk");var o=a("/FXl"),n=a("TjRS");a("aD51");function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"validators/third-party-validators.mdx"}});var b={_frontmatter:i},c=n.a;function p(e){var t=e.components,a=function(e,t){if(null==e)return{};var a,o,n={},r=Object.keys(e);for(o=0;o<r.length;o++)a=r[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(o.b)(c,r({},b,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"third-party-validators"},"Third party validators"),Object(o.b)("p",null,"If you need any specific validator that is not available in the core library, we have\npublished a set of validators microlibraries. You can use them as in a buffet: cherry\npicking the ones you need, by following this approach you avoid adding any unnecessary\nweight to your application."),Object(o.b)("p",null,"All this validators are avaible via the npm registry, each microlibrary GitHub repository contains the instructions\nabout how to integrate them in your application."),Object(o.b)("h2",{id:"fonk-is-number-validator"},"fonk-is-number-validator"),Object(o.b)("p",null,"Validates whether a given field is a number."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-number-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-number-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-number-validator"}),"https://github.com/Lemoncode/fonk-is-number-validator")),Object(o.b)("h2",{id:"fonk-min-number-validator"},"fonk-min-number-validator"),Object(o.b)("p",null,"Validates whether a given field number is greater (or optionally equal) than a minimum value."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-min-number-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-min-number-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-min-number-validator"}),"https://github.com/Lemoncode/fonk-min-number-validator")),Object(o.b)("h2",{id:"fonk-max-number-validator"},"fonk-max-number-validator"),Object(o.b)("p",null,"Validates whether a given field number is lower (or optionally equal) than a maximum value."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-max-number-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-max-number-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-max-number-validator"}),"https://github.com/Lemoncode/fonk-max-number-validator")),Object(o.b)("h2",{id:"fonk-range-number-validator"},"fonk-range-number-validator"),Object(o.b)("p",null,"Validates whether a given field number is between a given numeric range (min - max)."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-range-number-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-range-number-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-range-number-validator"}),"https://github.com/Lemoncode/fonk-range-number-validator")),Object(o.b)("h2",{id:"fonk-positive-number-validator"},"fonk-positive-number-validator"),Object(o.b)("p",null,"Validates whether a given field number is positive."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-positive-number-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-positive-number-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:"),": ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-positive-number-validator"}),"https://github.com/Lemoncode/fonk-positive-number-validator")),Object(o.b)("h2",{id:"fonk-negative-number-validator"},"fonk-negative-number-validator"),Object(o.b)("p",null,"Validates whether a given field number is negative."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-negative-number-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-negative-number-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-negative-number-validator"}),"https://github.com/Lemoncode/fonk-negative-number-validator")),Object(o.b)("h2",{id:"fonk-is-lowercase-validator"},"fonk-is-lowercase-validator"),Object(o.b)("p",null,"Validates that all characters in a given string are lowercase."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-lowercase-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-lowercase-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-lowercase-validator"}),"https://github.com/Lemoncode/fonk-is-lowercase-validator")),Object(o.b)("h2",{id:"fonk-is-uppercase-validator"},"fonk-is-uppercase-validator"),Object(o.b)("p",null,"Validates that all characters in a given string are uppercase."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-uppercase-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-uppercase-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-uppercase-validator"}),"https://github.com/Lemoncode/fonk-is-uppercase-validator")),Object(o.b)("h2",{id:"fonk-match-field-validator"},"fonk-match-field-validator"),Object(o.b)("p",null,"Validates that two fields have the same content."),Object(o.b)("p",null,"This validator is useful for ",Object(o.b)("em",{parentName:"p"},"signup")," scenarios like:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Password and repeat your password fields."),Object(o.b)("li",{parentName:"ul"},"Creating account: enter your email and reenter your email field, to ensure you haven't entered a typo.")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-match-field-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-match-field-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-match-field-validator"}),"https://github.com/Lemoncode/fonk-match-field-validator")),Object(o.b)("h2",{id:"fonk-required-by-field-validator"},"fonk-required-by-field-validator"),Object(o.b)("p",null,"Makes a field required depending on another field value."),Object(o.b)("p",null,"For instance:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Person form."),Object(o.b)("li",{parentName:"ul"},"Persons can be US Citizen or not."),Object(o.b)("li",{parentName:"ul"},"If a person is not a US Citized (checkbox US Citizen), then country field becomes required to be informed (mandatory).")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-required-by-field-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-required-by-field-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-required-by-field-validator"}),"https://github.com/Lemoncode/fonk-required-by-field-validator")),Object(o.b)("h2",{id:"fonk-is-credit-card-validator"},"fonk-is-credit-card-validator"),Object(o.b)("p",null,"Check if a string is a credit card."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-credit-card-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-credit-card-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-credit-card-validator"}),"https://github.com/Lemoncode/fonk-is-credit-card-validator")),Object(o.b)("h2",{id:"fonk-is-url-validator"},"fonk-is-url-validator"),Object(o.b)("p",null,"Validates whether a given field number is a well formed url."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-url-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-url-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-url-validator"}),"https://github.com/Lemoncode/fonk-is-url-validator")),Object(o.b)("h2",{id:"fonk-iban-validator"},"fonk-iban-validator"),Object(o.b)("p",null,"Validates whether a given string field is a valid IBAN."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-iban-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-iban-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-iban-validator"}),"https://github.com/Lemoncode/fonk-iban-validator")),Object(o.b)("h2",{id:"coming-soon-fonk-bic-validator"},"[Coming soon...]"," fonk-bic-validator"),Object(o.b)("p",null,"Validates whether a given string field is a well formed BIC code (Bank International Code)."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-bic-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-bic-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-bic-validator"}),"https://github.com/Lemoncode/fonk-bic-validator")),Object(o.b)("h2",{id:"fonk-nif-validator"},"fonk-nif-validator"),Object(o.b)("p",null,"Validates whether a given string field is a valid NIF. You could validate NIF, CIF, NIE, etc. using the customArgs."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-nif-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-nif-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-nif-validator"}),"https://github.com/Lemoncode/fonk-nif-validator")),Object(o.b)("h2",{id:"fonk-is-true-validator"},"fonk-is-true-validator"),Object(o.b)("p",null,"Validates whether a boolean field is true."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-true-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-true-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-true-validator"}),"https://github.com/Lemoncode/fonk-is-true-validator")),Object(o.b)("h2",{id:"fonk-array-required-validator"},"fonk-array-required-validator"),Object(o.b)("p",null,"Validates whether a given array field contains elements."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-array-required-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-array-required-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-array-required-validator"}),"https://github.com/Lemoncode/fonk-array-required-validator")),Object(o.b)("h2",{id:"fonk-chars-not-black-list-validator"},"fonk-chars-not-black-list-validator"),Object(o.b)("p",null,"Validate whether a field string only contains valid characters (characters that are not part of a given black list)."),Object(o.b)("p",null,"A possible scenario for this validator: an account id cannot contain spaces, back slash, single quotes, double quotes."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-chars-not-black-list-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-chars-not-black-list-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-chars-not-black-list-validator"}),"https://github.com/Lemoncode/fonk-chars-not-black-list-validator")),Object(o.b)("h2",{id:"fonk-previous-date-validator"},"fonk-previous-date-validator"),Object(o.b)("p",null,"Validates whether a field of a form is previous to a certain date."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-previous-date-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-previous-date-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-previous-date-validator"}),"https://github.com/Lemoncode/fonk-previous-date-validator")),Object(o.b)("h2",{id:"fonk-later-date-validator"},"fonk-later-date-validator"),Object(o.b)("p",null,"Validates whether a field of a form is later than a specified date."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-later-date-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-later-date-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-later-date-validator"}),"https://github.com/Lemoncode/fonk-later-date-validator")),Object(o.b)("h2",{id:"fonk-range-date-validator"},"fonk-range-date-validator"),Object(o.b)("p",null,"Validates whether a field of a form is between a date range."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-range-date-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-range-date-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-range-date-validator"}),"https://github.com/Lemoncode/fonk-range-date-validator")),Object(o.b)("h2",{id:"coming-soon-fonk-is-ip-validator"},"[Coming soon...]"," fonk-is-ip-validator"),Object(o.b)("p",null,"Validates whether a given field is valid IP."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-ip-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-ip-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-ip-validator"}),"https://github.com/Lemoncode/fonk-is-ip-validator")),Object(o.b)("h2",{id:"coming-soon-fonk-is-hex-color-validator"},"[Coming soon...]"," fonk-is-hex-color-validator"),Object(o.b)("p",null,"Validates whether a given field is valid hexadecimal color."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-hex-color-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-hex-color-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-hex-color-validator"}),"https://github.com/Lemoncode/fonk-is-hex-color-validator")),Object(o.b)("h2",{id:"coming-soon-fonk-is-json-validator"},"[Coming soon...]"," fonk-is-json-validator"),Object(o.b)("p",null,"Validates whether a given field is valid JSON object."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"npm:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://www.npmjs.com/package/@lemoncode/fonk-is-json-validator"}),"https://www.npmjs.com/package/@lemoncode/fonk-is-json-validator")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"github:")," ",Object(o.b)("a",r({parentName:"p"},{href:"https://github.com/Lemoncode/fonk-is-json-validator"}),"https://github.com/Lemoncode/fonk-is-json-validator")))}void 0!==p&&p&&p===Object(p)&&Object.isExtensible(p)&&!p.hasOwnProperty("__filemeta")&&Object.defineProperty(p,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"validators/third-party-validators.mdx"}}),p.isMDXComponent=!0}}]);
//# sourceMappingURL=component---validators-third-party-validators-mdx-8da4719b61a481d5f8fa.js.map