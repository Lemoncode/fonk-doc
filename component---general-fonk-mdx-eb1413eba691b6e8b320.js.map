{"version":3,"sources":["webpack:///../gifs/validate-field.gif","webpack:///../general/fonk.mdx"],"names":["module","exports","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","to","isMDXComponent"],"mappings":"gFAAAA,EAAOC,QAAU,IAA0B,8D,6bCOpC,IAAMC,EAAe,Q,kMAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,QADR,QAGA,2EACA,0CACA,2FACA,mFACA,uGACA,2FACA,gCACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,wBADZ,opBAkCL,qBAAG,mBAAKC,IAAI,iBAAiBC,IAAKC,EAAQ,WAC1C,qBAAG,mBAAGH,WAAW,KAAQ,CACrB,KAAQ,kGADT,6BAGH,qBAAG,mBAAGA,WAAW,KAAQ,CACrB,KAAQ,kGADT,6BAGH,yKAEA,6CACA,iCACA,6CACA,kCACA,iCACA,YAAC,IAAD,CAAWD,QAAQ,aACrB,YAAC,IAAD,CAAQK,GAAG,oBAAoBL,QAAQ,UAAvC,qB,yLAMFH,EAAWS,gBAAiB","file":"component---general-fonk-mdx-eb1413eba691b6e8b320.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/validate-field-300ebc8e4a500a9c58e8e7b07d4f331f.gif\";","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/test-ci-code/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Container, Button } from '../components';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"fonk\"\n    }}>{`Fonk`}</h1>\n    <p>{`Fonk is a pure javascript form validation library.`}</p>\n    <p>{`It allows you to:`}</p>\n    <p>{`- Define validations that apply to your form in a declarative way.`}</p>\n    <p>{`- Isolate your form validation business logic from the UI.`}</p>\n    <p>{`- Remove the need of mount the UI in order to unit test your form validations.`}</p>\n    <p>{`- Create reusable validation rules that can be easily unit tested.`}</p>\n    <p>{`Example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// The model\nconst loginRecord = {\n  user: '',\n  password: ''\n};\n\n// The validation schema\nimport { Validators, createFormValidation } from '@lemoncode/fonk';\n\nconst validationSchema = {\n  field: {\n    user: [Validators.required.validator],\n    password: [Validators.required.validator]\n  }\n};\n\nconst formValidation = createFormValidation(validationSchema);\n\n// Execute form validation\nformValidation\n  .validateField('user', loginRecord.user)\n  .then(validationResult => {\n    console.log(validationResult);\n  });\n\n// The result\n{\n  succeeded: false,\n  message: 'Please fill in this mandatory field.',\n  type: 'REQUIRED'\n}\n`}</code></pre>\n    <p><img alt=\"validate-field\" src={require(\"../gifs/validate-field.gif\")} /></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/js/validate-field\"\n      }}>{`Try it out in Javascript`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/ts/validate-field\"\n      }}>{`Try it out in Typescript`}</a></p>\n    <p>{`Fonk is framework extension, and can be easily plugged into many libraries / frameworks,\nin this documentation you will find integrations with:`}</p>\n    <p>{`- Plain Vanilla ES6.`}</p>\n    <p>{`- React.`}</p>\n    <p>{`- React Final Forms.`}</p>\n    <p>{`- Formik.`}</p>\n    <p>{`- Vuejs.`}</p>\n    <Container mdxType=\"Container\">\n  <Button to=\"./getting-started\" mdxType=\"Button\">Getting Started</Button>\n    </Container>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}