(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{"3qbP":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return r})),a.d(t,"default",(function(){return c}));a("5hJT"),a("W1QL"),a("K/PF"),a("t91x"),a("75LO"),a("PJhk");var o=a("/FXl"),n=a("TjRS");a("aD51");function i(){return(i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var o in a)Object.prototype.hasOwnProperty.call(a,o)&&(e[o]=a[o])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"form-libraries/formik.mdx"}});var l={_frontmatter:r},s=n.a;function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var a,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)a=i[o],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,["components"]);return Object(o.b)(s,i({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"integrating-fonk-with-react-formik"},"Integrating Fonk with React Formik"),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://github.com/jaredpalmer/formik"}),"Formik")," is a great library to manage forms state."),Object(o.b)("p",null,"Adding ",Object(o.b)("strong",{parentName:"p"},"Fonk")," to ",Object(o.b)("strong",{parentName:"p"},"Formik")," allows you to seamlessly add validation capabilities to ",Object(o.b)("strong",{parentName:"p"},"Formik"),"."),Object(o.b)("p",null,"In order to use ",Object(o.b)("strong",{parentName:"p"},"Fonk")," with ",Object(o.b)("strong",{parentName:"p"},"Formik")," you will have to install ",Object(o.b)("strong",{parentName:"p"},"fonk-formik")," adaptor:"),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-bash"}),"npm install @lemoncode/fonk @lemoncode/fonk-formik --save\n")),Object(o.b)("p",null,"The main change to apply when using a ",Object(o.b)("strong",{parentName:"p"},"fonk-formik")," comes when you want to instantiate\n",Object(o.b)("strong",{parentName:"p"},"Fonk")," engine with your form validation schema, instead of calling ",Object(o.b)("em",{parentName:"p"},"createFormValidation"),"\n, just replace that entry with ",Object(o.b)("em",{parentName:"p"},"createFormikValidation")),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-diff"}),"- import { createFormValidation, Validators } from '@lemoncode/fonk';\n+ import { Validators } from '@lemoncode/fonk';\n+ import { createFormikValidation } from '@lemoncode/fonk-formik';\n\nconst validationSchema = {\n  field: {\n    email: [Validators.required],\n    password: [Validators.required]\n  }\n};\n\n- export const formValidation = createFormValidation(validationSchema);\n+ export const formValidation = createFormikValidation(validationSchema);\n")),Object(o.b)("p",null,"Now you can hook to Formik form validation (example):"),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-diff"}),'    <Formik\n      initialValues={{ email: "", password: "" }}\n+     validate={formValidation.validateForm}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      }}\n    >\n')),Object(o.b)("p",null,"And if you want to hook to Formik field validations (example):"),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-diff"}),'  <form onSubmit={handleSubmit}>\n    <Field\n      name="email"\n+     validate={(value) => formValidation.validateField("email", value)} />\n')),Object(o.b)("p",null,"Example: How to display field validation error message:"),Object(o.b)("pre",null,Object(o.b)("code",i({parentName:"pre"},{className:"language-diff"}),'    <Field name="email"/>\n+    {errors &&\n+      errors.email &&\n+       touched.email &&\n+       <div>{errors.email}</div>}\n')),Object(o.b)("h1",{id:"examples"},"Examples:"),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/basic"}),"Basic example")),Object(o.b)("p",null,Object(o.b)("img",{alt:"basic",src:a("y8BA")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/formik-components"}),"Using formik Field")),Object(o.b)("p",null,Object(o.b)("img",{alt:"formik-components",src:a("mcie")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/field-level-validation"}),"Firing validations at field level")),Object(o.b)("p",null,Object(o.b)("img",{alt:"field-level-validation",src:a("6yt8")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/async-validator"}),"Asynchronous validation")),Object(o.b)("p",null,Object(o.b)("img",{alt:"async-validator",src:a("o+Ab")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-error-message-global"}),"Customizing validator's error messages globaly")),Object(o.b)("p",null,Object(o.b)("img",{alt:"custom-error-message-global",src:a("N7gg")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-error-message-local"}),"Customizing validator's error messages just for a given form")),Object(o.b)("p",null,Object(o.b)("img",{alt:"custom-error-message-local",src:a("uD80")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/custom-validators"}),"Creating custom validators")),Object(o.b)("p",null,Object(o.b)("img",{alt:"custom-validators",src:a("tiIy")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/nested-field"}),"Validating nested fields")),Object(o.b)("p",null,Object(o.b)("img",{alt:"nested-field",src:a("cTuY")})),Object(o.b)("p",null,Object(o.b)("a",i({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/formik/js/record-validation"}),"Defining record validations")),Object(o.b)("p",null,Object(o.b)("img",{alt:"record-validation",src:a("6PPP")})))}c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"form-libraries/formik.mdx"}}),c.isMDXComponent=!0},"6PPP":function(e,t,a){e.exports=a.p+"static/record-validation-706a38dd52978ea17f99928b7bd23248.gif"},"6yt8":function(e,t,a){e.exports=a.p+"static/field-level-validation-bdc9b3f69b6e85abe7e18356fc4c3a65.gif"},N7gg:function(e,t,a){e.exports=a.p+"static/custom-error-message-global-a0b49023dad33b59c4526fd39e22b0b6.gif"},cTuY:function(e,t,a){e.exports=a.p+"static/nested-field-3aeed75c21e53f9ceb6a864ff7c52ce5.gif"},mcie:function(e,t,a){e.exports=a.p+"static/formik-components-a135b2f872b77b9d1db88c129ff92785.gif"},"o+Ab":function(e,t,a){e.exports=a.p+"static/async-validator-04a546b4c95bd219bfdbfe29a305c0fe.gif"},tiIy:function(e,t,a){e.exports=a.p+"static/custom-validators-5f8d1905a9dd216a764a52b188a4ca36.gif"},uD80:function(e,t,a){e.exports=a.p+"static/custom-error-message-local-ee6b5614dfb422bbd1a266be41e2b300.gif"},y8BA:function(e,t,a){e.exports=a.p+"static/basic-52890d9a68244acfa09f1c684dea3776.gif"}}]);
//# sourceMappingURL=component---form-libraries-formik-mdx-a019c6066bee7863c97b.js.map