(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"2GDF":function(e,t,n){e.exports=n.p+"static/validate-field-300ebc8e4a500a9c58e8e7b07d4f331f.gif"},"iw+4":function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return r})),n.d(t,"default",(function(){return b}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("SAVP"),i=n("TjRS"),o=n("gqXn");n("aD51");function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var r={};void 0!==r&&r&&r===Object(r)&&Object.isExtensible(r)&&!r.hasOwnProperty("__filemeta")&&Object.defineProperty(r,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"general/fonk.mdx"}});var s={_frontmatter:r},c=i.a;function b(e){var t=e.components,i=function(e,t){if(null==e)return{};var n,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,["components"]);return Object(a.b)(c,l({},s,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"fonk"},"Fonk"),Object(a.b)("p",null,"Fonk is a pure javascript form validation library."),Object(a.b)("p",null,"It allows you to:"),Object(a.b)("p",null,"- Define validations that apply to your form in a declarative way."),Object(a.b)("p",null,"- Isolate your form validation business logic from the UI."),Object(a.b)("p",null,"- Remove the need of mount the UI in order to unit test your form validations."),Object(a.b)("p",null,"- Create reusable validation rules that can be easily unit tested."),Object(a.b)("p",null,"Example"),Object(a.b)("pre",null,Object(a.b)("code",l({parentName:"pre"},{className:"language-javascript"}),"// The model\nconst loginRecord = {\n  user: '',\n  password: ''\n};\n\n// The validation schema\nimport { Validators, createFormValidation } from '@lemoncode/fonk';\n\nconst validationSchema = {\n  field: {\n    user: [Validators.required.validator],\n    password: [Validators.required.validator]\n  }\n};\n\nconst formValidation = createFormValidation(validationSchema);\n\n// Execute form validation\nformValidation\n  .validateField('user', loginRecord.user)\n  .then(validationResult => {\n    console.log(validationResult);\n  });\n\n// The result\n{\n  succeeded: false,\n  message: 'Please fill in this mandatory field.',\n  type: 'REQUIRED'\n}\n")),Object(a.b)("p",null,Object(a.b)("img",{alt:"validate-field",src:n("2GDF")})),Object(a.b)("p",null,Object(a.b)("a",l({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/js/validate-field"}),"Try it out in Javascript")),Object(a.b)("p",null,Object(a.b)("a",l({parentName:"p"},{href:"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/ts/validate-field"}),"Try it out in Typescript")),Object(a.b)("p",null,"Fonk is framework extension, and can be easily plugged into many libraries / frameworks,\nin this documentation you will find integrations with:"),Object(a.b)("p",null,"- Plain Vanilla ES6."),Object(a.b)("p",null,"- React."),Object(a.b)("p",null,"- React Final Forms."),Object(a.b)("p",null,"- Formik."),Object(a.b)("p",null,"- Vuejs."),Object(a.b)(o.b,{mdxType:"Container"},Object(a.b)(o.a,{to:"./getting-started",mdxType:"Button"},"Getting Started")))}b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"general/fonk.mdx"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---general-fonk-mdx-0b88091e6e647718c487.js.map