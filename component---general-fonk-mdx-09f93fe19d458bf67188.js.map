{"version":3,"sources":["webpack:///../node_modules/create-emotion/dist/create-emotion.browser.esm.js","webpack:///../node_modules/emotion/dist/emotion.esm.js","webpack:///../components/container.styles.tsx","webpack:///../components/container.tsx","webpack:///../components/button.styles.ts","webpack:///../components/button.tsx","webpack:///../general/fonk.mdx"],"names":["insertWithoutScoping","cache","serialized","undefined","inserted","name","insert","sheet","merge","registered","css","className","registeredStyles","rawClassName","length","classnames","args","cls","i","arg","toAdd","Array","isArray","k","_createEmotion","options","speedy","value","this","isSpeedy","compat","_len","arguments","_key","mergedProps","key","cx","_len4","_key4","injectGlobal","_len3","_key3","keyframes","_len2","_key2","animation","styles","hydrate","ids","forEach","flush","getRegisteredStyles","bind","container","Container","props","children","classes","button","Button","to","href","_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"component---general-fonk-mdx-09f93fe19d458bf67188.js","sourcesContent":["import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.function.name\";\nimport createCache from '@emotion/cache';\nimport { serializeStyles } from '@emotion/serialize';\nimport { getRegisteredStyles, insertStyles } from '@emotion/utils';\n\nfunction insertWithoutScoping(cache, serialized) {\n  if (cache.inserted[serialized.name] === undefined) {\n    return cache.insert('', serialized, cache.sheet, true);\n  }\n}\n\nfunction merge(registered, css, className) {\n  var registeredStyles = [];\n  var rawClassName = getRegisteredStyles(registered, registeredStyles, className);\n\n  if (registeredStyles.length < 2) {\n    return className;\n  }\n\n  return rawClassName + css(registeredStyles);\n}\n\nvar createEmotion = function createEmotion(options) {\n  var cache = createCache(options); // $FlowFixMe\n\n  cache.sheet.speedy = function (value) {\n    if (process.env.NODE_ENV !== 'production' && this.ctr !== 0) {\n      throw new Error('speedy must be changed before any rules are inserted');\n    }\n\n    this.isSpeedy = value;\n  };\n\n  cache.compat = true;\n\n  var css = function css() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var serialized = serializeStyles(args, cache.registered, this !== undefined ? this.mergedProps : undefined);\n    insertStyles(cache, serialized, false);\n    return cache.key + \"-\" + serialized.name;\n  };\n\n  var keyframes = function keyframes() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    var animation = \"animation-\" + serialized.name;\n    insertWithoutScoping(cache, {\n      name: serialized.name,\n      styles: \"@keyframes \" + animation + \"{\" + serialized.styles + \"}\"\n    });\n    return animation;\n  };\n\n  var injectGlobal = function injectGlobal() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    var serialized = serializeStyles(args, cache.registered);\n    insertWithoutScoping(cache, serialized);\n  };\n\n  var cx = function cx() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return merge(cache.registered, css, classnames(args));\n  };\n\n  return {\n    css: css,\n    cx: cx,\n    injectGlobal: injectGlobal,\n    keyframes: keyframes,\n    hydrate: function hydrate(ids) {\n      ids.forEach(function (key) {\n        cache.inserted[key] = true;\n      });\n    },\n    flush: function flush() {\n      cache.registered = {};\n      cache.inserted = {};\n      cache.sheet.flush();\n    },\n    // $FlowFixMe\n    sheet: cache.sheet,\n    cache: cache,\n    getRegisteredStyles: getRegisteredStyles.bind(null, cache.registered),\n    merge: merge.bind(null, cache.registered, css)\n  };\n};\n\nvar classnames = function classnames(args) {\n  var cls = '';\n\n  for (var i = 0; i < args.length; i++) {\n    var arg = args[i];\n    if (arg == null) continue;\n    var toAdd = void 0;\n\n    switch (typeof arg) {\n      case 'boolean':\n        break;\n\n      case 'object':\n        {\n          if (Array.isArray(arg)) {\n            toAdd = classnames(arg);\n          } else {\n            toAdd = '';\n\n            for (var k in arg) {\n              if (arg[k] && k) {\n                toAdd && (toAdd += ' ');\n                toAdd += k;\n              }\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          toAdd = arg;\n        }\n    }\n\n    if (toAdd) {\n      cls && (cls += ' ');\n      cls += toAdd;\n    }\n  }\n\n  return cls;\n};\n\nexport default createEmotion;","import createEmotion from 'create-emotion';\n\nvar _createEmotion = createEmotion(),\n    flush = _createEmotion.flush,\n    hydrate = _createEmotion.hydrate,\n    cx = _createEmotion.cx,\n    merge = _createEmotion.merge,\n    getRegisteredStyles = _createEmotion.getRegisteredStyles,\n    injectGlobal = _createEmotion.injectGlobal,\n    keyframes = _createEmotion.keyframes,\n    css = _createEmotion.css,\n    sheet = _createEmotion.sheet,\n    cache = _createEmotion.cache;\n\nexport { cache, css, cx, flush, getRegisteredStyles, hydrate, injectGlobal, keyframes, merge, sheet };","import { css } from \"emotion\";\n\nexport const container = css`\n  display: flex;\n  justify-content: flex-start;\n  margin-top: 60px;\n`;\n","import * as React from \"react\";\nimport * as classes from \"./container.styles\";\n\nexport const Container: React.FunctionComponent = props => {\n  const { children } = props;\n\n  return <div className={classes.container}>{children}</div>;\n};\n","import { css } from \"emotion\";\n\nexport const button = css`\n  color: white;\n  background-color: rgb(66, 99, 247);\n  text-decoration: none;\n  box-shadow: transparent 0px 0px 0px 1px inset;\n  font-size: 18px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 20px 30px;\n  border-radius: 3px;\n`;\n","import * as React from \"react\";\nimport * as classes from \"./button.styles\";\n\ninterface Props {\n  to: string;\n}\n\nexport const Button: React.FunctionComponent<Props> = props => {\n  const { to, children } = props;\n  return (\n    <a href={to} className={classes.button}>\n      {children}\n    </a>\n  );\n};\n","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/circleci/test-ci-code/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Container, Button } from '../components';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"fonk\"\n    }}>{`Fonk`}</h1>\n    <p>{`Fonk is a pure javascript form validation library.`}</p>\n    <p>{`It allows you to:`}</p>\n    <p>{`- Define validations that apply to your form in a declarative way.`}</p>\n    <p>{`- Isolate your form validation business logic from the ui.`}</p>\n    <p>{`- Remove the need of mount the UI in order to unit test your form validations.`}</p>\n    <p>{`- Create reusable validation rules that can be easily unit tested.`}</p>\n    <p>{`Example`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`// The model\nconst loginRecord = {\n  user: '',\n  password: ''\n};\n\n// The validation schema\nimport { Validators, createFormValidation } from '@lemoncode/fonk';\n\nconst validationSchema = {\n  field: {\n    user: [Validators.required.validator],\n    password: [Validators.required.validator]\n  }\n};\n\nconst formValidation = createFormValidation(validationSchema);\n\n// Execute form validation\nformValidation\n  .validateField('user', loginRecord.user)\n  .then(validationResult => {\n    console.log(validationResult);\n  });\n\n// The result\n{\n  succeeded: false,\n  message: 'Please fill in this mandatory field.',\n  type: 'REQUIRED'\n}\n`}</code></pre>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/js/validate-field\"\n      }}>{`Try it out in Javascript`}</a></p>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://codesandbox.io/s/github/lemoncode/fonk/tree/master/examples/vanilla/ts/validate-field\"\n      }}>{`Try it out in Typescript`}</a></p>\n    <p>{`Fonk is framework extension, and can be easily plugged into many libraries / frameworks,\nin this documentation you will find integrations with:`}</p>\n    <p>{`- Plain Vanilla ES6`}</p>\n    <p>{`- React.`}</p>\n    <p>{`- React Final Forms.`}</p>\n    <p>{`- Formik.`}</p>\n    <p>{`- Vuejs.`}</p>\n    <Container mdxType=\"Container\">\n  <Button to=\"./getting-started\" mdxType=\"Button\">Getting Started</Button>\n    </Container>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}